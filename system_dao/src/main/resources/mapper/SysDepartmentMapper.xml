<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.htcs.wework.system.dao.SysDepartmentMapper">
    <resultMap id="BaseResultMap" type="com.htcs.wework.system.model.SysDepartment">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="parent_id" jdbcType="INTEGER" property="parentId"/>
        <result column="department_name" jdbcType="VARCHAR" property="departmentName"/>
        <result column="department_desc" jdbcType="VARCHAR" property="departmentDesc"/>
        <result column="department_tags" jdbcType="VARCHAR" property="departmentTags"/>
        <result column="logical_del" jdbcType="TINYINT" property="logicalDel"/>
        <result column="create_by" jdbcType="INTEGER" property="createBy"/>
        <result column="create_name" jdbcType="VARCHAR" property="createName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="INTEGER" property="updateBy"/>
        <result column="update_name" jdbcType="VARCHAR" property="updateName"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, parent_id, department_name, department_desc, department_tags, logical_del, create_by,
        create_name, create_time, update_by, update_name, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_department
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="getDepartmentById" resultType="map">
        SELECT
            sd.id,
            sd.parent_id parentId,
            sd.department_name departmentName,
            sd.department_desc departmentDesc,
            sdp.department_name parentName
        FROM sys_department sd LEFT JOIN sys_department sdp ON sd.parent_id = sdp.id
        WHERE
            sd.id = #{id}
    </select>
    <select id="listDepartment" resultType="com.htcs.wework.system.model.dto.TreeDto">
        SELECT
            id,
            department_name label,
            parent_id parentId
        from sys_department
        WHERE logical_del = 0
    </select>
    <select id="listDepartmentByParentId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from sys_department
        <where>
            logical_del = 0
            <if test="parentId != null and parentId != ''">
                AND parent_id = #{parentId}
            </if>
            <if test="departmentName != null and departmentName != ''">
                AND department_name LIKE CONCAT('%', #{departmentName}, '%')
            </if>
        </where>
    </select>
    <select id="countByParentId" resultType="int">
        SELECT COUNT(*) FROM sys_department WHERE parent_id = #{parentId}
    </select>
    <insert id="insertSelective" parameterType="com.htcs.wework.system.model.SysDepartment">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sys_department
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="departmentName != null">
                department_name,
            </if>
            <if test="departmentDesc != null">
                department_desc,
            </if>
            <if test="departmentTags != null">
                department_tags,
            </if>
            <if test="logicalDel != null">
                logical_del,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createName != null">
                create_name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateName != null">
                update_name,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="departmentName != null">
                #{departmentName,jdbcType=VARCHAR},
            </if>
            <if test="departmentDesc != null">
                #{departmentDesc,jdbcType=VARCHAR},
            </if>
            <if test="departmentTags != null">
                #{departmentTags,jdbcType=VARCHAR},
            </if>
            <if test="logicalDel != null">
                #{logicalDel,jdbcType=TINYINT},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=INTEGER},
            </if>
            <if test="createName != null">
                #{createName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=INTEGER},
            </if>
            <if test="updateName != null">
                #{updateName,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.htcs.wework.system.model.SysDepartment">
        update sys_department
        <set>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="departmentName != null">
                department_name = #{departmentName,jdbcType=VARCHAR},
            </if>
            <if test="departmentDesc != null">
                department_desc = #{departmentDesc,jdbcType=VARCHAR},
            </if>
            <if test="departmentTags != null">
                department_tags = #{departmentTags,jdbcType=VARCHAR},
            </if>
            <if test="logicalDel != null">
                logical_del = #{logicalDel,jdbcType=TINYINT},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=INTEGER},
            </if>
            <if test="createName != null">
                create_name = #{createName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=INTEGER},
            </if>
            <if test="updateName != null">
                update_name = #{updateName,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="logicalDeleteByIds">
        UPDATE sys_department SET
            logical_del = 1,
            update_by = #{id,jdbcType=INTEGER},
            update_name = #{userName,jdbcType=VARCHAR},
            update_time = now()
        WHERE id IN
        <foreach collection="idList" item="item" open="(" separator="," close=");">
            #{item}
        </foreach>
        DELETE FROM sys_department_user WHERE department_id IN
        <foreach collection="idList" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
</mapper>