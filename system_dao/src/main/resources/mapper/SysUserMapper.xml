<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.htcs.wework.system.dao.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.htcs.wework.system.model.SysUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="login_pwd" jdbcType="VARCHAR" property="loginPwd" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="last_login_ip" jdbcType="VARCHAR" property="lastLoginIp" />
    <result column="api_key" jdbcType="VARCHAR" property="apiKey" />
    <result column="api_secret" jdbcType="VARCHAR" property="apiSecret" />
    <result column="logical_del" jdbcType="TINYINT" property="logicalDel" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="create_name" jdbcType="VARCHAR" property="createName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
    <result column="update_name" jdbcType="VARCHAR" property="updateName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, login_name, login_pwd, salt, user_name, email, mobile, telephone, status, last_login_time, 
    last_login_ip, api_key, api_secret, logical_del, create_by, create_name, create_time, 
    update_by, update_name, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="countByLoginName" resultType="int">
    SELECT COUNT(*)
    FROM sys_user
    WHERE login_name = #{loginName}
  </select>
  <select id="selectByLoginName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_user
    where login_name = #{username,jdbcType=INTEGER}
  </select>
  <select id="listUser" resultType="map">
    SELECT
    su.id,
    su.login_name loginName,
    su.user_name userName,
    su.mobile,
    su.status,
    GROUP_CONCAT(sd.department_name SEPARATOR ',') departmentName
    FROM sys_user su LEFT JOIN sys_department_user sdu ON su.id = sdu.user_id
    LEFT JOIN sys_department sd ON sd.id = sdu.department_id
    <where>
      su.logical_del = 0
      <if test="showOrAdd == 3">
        AND su.id NOT IN (SELECT user_id FROM sys_role_user WHERE role_id = #{roleId})
      </if>
      <if test="departmentId != null and departmentId != ''">
        AND sd.id = #{departmentId}
      </if>
      <if test="loginName != null and loginName != ''">
        AND su.login_name LIKE CONCAT('%', #{loginName}, '%')
      </if>
      <if test="userName != null and userName != ''">
        AND su.user_name LIKE CONCAT('%', #{userName}, '%')
      </if>
    </where>
    GROUP BY su.id
  </select>
  <select id="listUserNotAdmin" resultType="map">
    SELECT
    su.id,
    su.login_name loginName,
    su.user_name userName,
    su.mobile,
    su.status,
    GROUP_CONCAT(sd.department_name SEPARATOR ',') departmentName
    FROM sys_user su LEFT JOIN sys_department_user sdu ON su.id = sdu.user_id
    LEFT JOIN sys_department sd ON sd.id = sdu.department_id
    <where>
      su.logical_del = 0 AND su.id != 1
      <if test="showOrAdd == 3">
        AND su.id NOT IN (SELECT user_id FROM sys_role_user WHERE role_id = #{roleId})
      </if>
      <if test="departmentId != null and departmentId != ''">
        AND sd.id = #{departmentId}
      </if>
      <if test="loginName != null and loginName != ''">
        AND su.login_name LIKE CONCAT('%', #{loginName}, '%')
      </if>
      <if test="userName != null and userName != ''">
        AND su.user_name LIKE CONCAT('%', #{userName}, '%')
      </if>
    </where>
    GROUP BY su.id
  </select>
  <insert id="insertSelective" parameterType="com.htcs.wework.system.model.SysUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginName != null">
        login_name,
      </if>
      <if test="loginPwd != null">
        login_pwd,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="lastLoginIp != null">
        last_login_ip,
      </if>
      <if test="apiKey != null">
        api_key,
      </if>
      <if test="apiSecret != null">
        api_secret,
      </if>
      <if test="logicalDel != null">
        logical_del,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createName != null">
        create_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateName != null">
        update_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPwd != null">
        #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="apiKey != null">
        #{apiKey,jdbcType=VARCHAR},
      </if>
      <if test="apiSecret != null">
        #{apiSecret,jdbcType=VARCHAR},
      </if>
      <if test="logicalDel != null">
        #{logicalDel,jdbcType=TINYINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createName != null">
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateName != null">
        #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.htcs.wework.system.model.SysUser">
    update sys_user
    <set>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPwd != null">
        login_pwd = #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="apiKey != null">
        api_key = #{apiKey,jdbcType=VARCHAR},
      </if>
      <if test="apiSecret != null">
        api_secret = #{apiSecret,jdbcType=VARCHAR},
      </if>
      <if test="logicalDel != null">
        logical_del = #{logicalDel,jdbcType=TINYINT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createName != null">
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateName != null">
        update_name = #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="logicalDeleteByIds">
    UPDATE sys_user
    SET
    logical_del = 1,
    update_by = #{updateBy,jdbcType=INTEGER},
    update_name = #{updateName,jdbcType=VARCHAR},
    update_time = now()
    WHERE id IN
    <foreach collection="idList" item="ids" index="index" open="(" separator="," close=");">
      #{ids}
    </foreach>
    DELETE FROM sys_department_user WHERE user_id IN
    <foreach collection="idList" item="ids" index="index" open="(" separator="," close=");">
      #{ids}
    </foreach>
    DELETE FROM sys_group_user WHERE user_id IN
    <foreach collection="idList" item="ids" index="index" open="(" separator="," close=");">
      #{ids}
    </foreach>
    DELETE FROM sys_role_user WHERE user_id IN
    <foreach collection="idList" item="ids" index="index" open="(" separator="," close=")">
      #{ids}
    </foreach>
  </update>
</mapper>